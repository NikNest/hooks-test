#!/bin/bash
# this is a git pre-commit hook that checks if source files included in the commit are correctly formatted

# merge commits are automaticaly passed
if git rev-parse --verify -q MERGE_HEAD
then
exit 0
fi

echo -e "Checking commit files formatting(accordind to .clang-format)...\n"
(
#navigate to the root directory of the git repository 
cd "$(git rev-parse --show-toplevel)" 

is_fail_accured=0
wrong_formatted_files=()
are_files_wrong_formatted=0
committed_cpp_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E "^\S*(\.cpp|\.hpp|\.h|\.cpp)$")

for file in $committed_cpp_files
do
  # check if the file in the working repository(not necessary the version added to the commit) is wrong formatted 
  clang-format -style=file "$file" | diff "$file" - > /dev/null
  wrong_formatted=$?
  # extract the git index of a file
  index_hash=$(git ls-files -s "$file" | awk '{print $2}')
  # check that the code that corresponds to the index(the commited code) is correctly formatted 
  git show "$index_hash" | clang-format -style=file | diff <(git show "$index_hash") - > /dev/null
  index_wrong_formatted=$?
  
  if [ $wrong_formatted = 1 ]
  then
    are_files_wrong_formatted=1
    wrong_formatted_files+=($file)
  fi
  if [ $index_wrong_formatted = 1 ]
  then
	echo -e "$file \e[31mREJECTED\e[0m"
	is_fail_accured=1
  else
	echo -e "$file \e[32mAPPROVED\e[0m"
  fi
done

echo ""

if [ $is_fail_accured = 1 ]
then
  if [ $are_files_wrong_formatted = 1 ]
  then
    echo -e "The commit was \e[31mABORTED\e[0m. Please format the code according to the .clang-format and commit it again."
    echo "..."
    echo "To apply clang auto formatting, use the snippet:"
    echo -n "clang-format -style=file -i "
    for file in ${wrong_formatted_files[@]} 
      do echo -n "'$(git rev-parse --show-toplevel)/$file' "; 
    done
    echo ""
  else
     echo "All the files in git working directory are correctly formatted, but the code of the index aren't."
     echo -e "The commit was \e[31mABORTED\e[0m. You probably forgot to add the formatted files to the index."
     echo "Use \"git status\" to list unstaged changes and then add them to the index using \"git add <file>...\"."
     echo ""
  fi
fi
exit $is_fail_accured
)